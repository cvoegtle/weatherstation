import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {    // Configuration for building
    ext.kotlin_version = '1.8.20'

    repositories {
        jcenter()    // Bintray's repository - a fast Maven Central mirror & more
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:+'    // latest App Engine Gradle tasks
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    }
}

repositories {   // repositories for Jar's you access in your code
    maven {
        url 'https://maven-central.storage.googleapis.com'             // Google's mirror of Maven Central
    }
    jcenter()
    mavenCentral()
}

apply plugin: 'java'                              // standard Java tasks
apply plugin: 'kotlin'
apply plugin: 'war'                               // standard Web Archive plugin
apply plugin: 'com.google.cloud.tools.appengine'  // App Engine tasks

dependencies {
    compileOnly "jakarta.servlet:jakarta.servlet-api:4.0.4"
    implementation 'com.google.appengine:appengine:+'
    implementation 'com.google.appengine:appengine-api-1.0-sdk:+'
    implementation 'com.google.appengine:appengine-api-labs:+'
    implementation 'com.google.appengine:appengine-endpoints:+'
    implementation 'com.google.appengine:appengine-endpoints-deps:+'
    implementation 'com.google.appengine:appengine-jsr107cache:+'
    implementation 'net.sf.jsr107cache:jsr107cache:1.1'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation 'com.google.guava:guava:30.0-jre'
    implementation 'com.googlecode.objectify:objectify:5.1.21'
}


// [START model]
appengine {  // App Engine tasks configuration
    run {      // local (dev_appserver) configuration (standard environments only)
        port = 8080                 // default
    }


    deploy {   // deploy configuration
        // baliwetter elbwetter forstwetter herzowetter instantwetter leo-wetter
        // oxenwetter shenzhenwetter tegelwetter testwetter wettercentral wetterimages
        version = '91'
        projectId = 'christianwetter'
        stopPreviousVersion = true
        promote = true
    }
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = '17'
    }
}
