buildscript {    // Configuration for building
    ext.kotlin_version = '1.5.10'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:+'    // latest App Engine Gradle tasks
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {   // repositories for Jar's you access in your code
    maven {
        url 'https://maven-central.storage.googleapis.com'             // Google's mirror of Maven Central
//   url 'https://oss.sonatype.org/content/repositories/snapshots' // SNAPSHOT Repository (if needed)
    }
    jcenter()
    mavenCentral()
}

apply plugin: 'java'                              // standard Java tasks
apply plugin: 'kotlin'
apply plugin: 'war'                               // standard Web Archive plugin
apply plugin: 'com.google.cloud.tools.appengine'  // App Engine tasks

dependencies {
    providedCompile group: 'javax.servlet', name: 'servlet-api', version: '2.5'
    implementation 'com.google.appengine:appengine:+'
    implementation 'com.google.appengine:appengine-api-1.0-sdk:+'
    implementation 'com.google.appengine:appengine-api-labs:+'
    implementation 'com.google.appengine:appengine-endpoints:+'
    implementation 'com.google.appengine:appengine-endpoints-deps:+'
    implementation 'com.google.appengine:appengine-jsr107cache:+'
    implementation 'net.sf.jsr107cache:jsr107cache:1.1'
    implementation 'org.ow2.asm:asm:5.0.4'
    implementation 'org.datanucleus:datanucleus-enhancer:3.1.1'
    implementation 'org.datanucleus:datanucleus-api-jdo:3.1.3'
    implementation 'org.datanucleus:datanucleus-api-jpa:3.1.3'
    implementation 'com.google.appengine.orm:datanucleus-appengine:2.1.2'
    implementation 'org.datanucleus:datanucleus-core:3.1.3'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation 'org.apache.geronimo.specs:geronimo-jpa_2.0_spec:1.0'
    implementation 'javax.jdo:jdo-api:3.0'
    implementation 'javax.transaction:jta:1.1'
}

// [START model]
appengine {  // App Engine tasks configuration
    run {      // local (dev_appserver) configuration (standard environments only)
        port = 8080                 // default
    }


    deploy {   // deploy configuration
        // baliwetter elbwetter forstwetter herzowetter instantwetter leo-wetter
        // oxenwetter shenzhenwetter tegelwetter testwetter wettercentral wetterimages
        version = '90'
        projectId = 'instantwetter'
        stopPreviousVersion = true
        promote = true
    }
}



task datanucleusEnhance {
    description "Enhance JPA model classes using DataNucleus Enhancer"
    dependsOn compileJava

    doLast {
        // define the entity classes
        sourceSets.main.output.classesDirs.each {
            def entityFiles = fileTree(it)

            println "Enhancing with DataNucleus the following files"
            println it
            entityFiles.getFiles().each {
                println it
            }

            // define Ant task for DataNucleus Enhancer
            ant.taskdef(
                    name: 'datanucleusenhancer',
                    classpath: sourceSets.main.runtimeClasspath.asPath,
                    classname: 'org.datanucleus.enhancer.tools.EnhancerTask'
            )

            // run the DataNucleus Enhancer as an Ant task
            ant.datanucleusenhancer(
                    classpath: sourceSets.main.runtimeClasspath.asPath,
                    verbose: true,
                    api: 'JPA') {
                entityFiles.addToAntBuilder(ant, 'fileset', FileCollection.AntType.FileSet)
            }
        }

    }
}

classes.dependsOn(datanucleusEnhance)
// [END model]

sourceCompatibility = 1.8
targetCompatibility = 1.8
