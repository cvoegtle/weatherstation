buildscript {    // Configuration for building
    ext.kotlin_version = '1.3.41'
    ext.spring_boot_version = '2.1.6.RELEASE'

    repositories {
        jcenter()    // Bintray's repository - a fast Maven Central mirror & more
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:+'    // latest App Engine Gradle tasks
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

repositories {   // repositories for Jar's you access in your code
    maven {
        url 'https://maven-central.storage.googleapis.com'             // Google's mirror of Maven Central
    }
    jcenter()
    mavenCentral()
}

apply plugin: 'java'                              // standard Java tasks
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'com.google.cloud.tools.appengine'  // App Engine tasks


dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    compile 'com.google.appengine:appengine:+'
    compile 'com.google.appengine:appengine-api-1.0-sdk:+'
    compile 'com.google.appengine:appengine-api-labs:+'
    compile 'com.google.appengine:appengine-endpoints:+'
    compile 'com.google.appengine:appengine-endpoints-deps:+'
    compile 'com.google.appengine:appengine-jsr107cache:+'

    compile 'com.google.guava:guava:19.0'
    compile 'com.googlecode.objectify:objectify:5.1.21'

    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'com.fasterxml.jackson.module:jackson-module-kotlin'
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile("org.mockito:mockito-core:2.+")
}

war {
    webInf { from 'web/WEB-INF' }
}

bootWar {
    mainClassName = 'org.voegtle.weatherstation.server.Application'
}

// [START model]
appengine {  // App Engine tasks configuration
    run {      // local (dev_appserver) configuration (standard environments only)
        port = 8080                 // default
    }


    deploy {   // deploy configuration
        // baliwetter elbwetter forstwetter herzowetter instantwetter leo-wetter
        // oxenwetter shenzhenwetter tegelwetter testwetter wettercentral wetterimages
        version = '63'
        projectId = 'tegelwetter'
        stopPreviousVersion = true
        promote = true
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
